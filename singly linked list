#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define MAX_LEN 100
struct Node {
    char data[MAX_LEN];
    struct Node* next;
};
struct Node* top = NULL;
void insert(char* value) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    if (!newNode) {
        printf("Heap overflow\n");
        return;
    }
    strcpy(newNode->data, value);
    newNode->next = top;
    top = newNode;
    printf("Inserted: %s\n", value);
}
void delete() {
    if (top == NULL) {
        printf("Stack is empty. Cannot delete.\n");
        return;
    }
    struct Node* temp = top;
    printf("Deleted: %s\n", top->data);
    top = top->next;
    free(temp);
}
void search(char* key) {
    struct Node* current = top;
    int position = 0;
    while (current != NULL) {
        if (strcmp(current->data, key) == 0) {
            printf("Found \"%s\" at position %d\n", key, position);
            return;
        }
        current = current->next;
        position++;
    }
    printf("\"%s\" not found in the stack.\n", key);
}

void display() {
    if (top == NULL) {
        printf("Stack is empty.\n");
        return;
    }
    struct Node* current = top;
    printf("Stack elements (top to bottom):\n");
    while (current != NULL) {
        printf("%s -> ", current->data);
        current = current->next;
    }
    printf("NULL\n");
}

int main() {
    insert("chocolate");
    insert("cake");
    insert("briyani");
    insert("ice cream");
    insert("bisket");
    insert("brownie");
    display();
    search("briyani");
    search("pizza");
    delete();
    display();
    return 0;
}
